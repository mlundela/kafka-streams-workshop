version: "3"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.6
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    volumes:
      - zookeeper:/data
    networks:
      - workshop

  kafka:
    image: confluentinc/cp-kafka:5.5.6
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"
    volumes:
      - kafka:/data
    networks:
      - workshop

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.6
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9092
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL=ERROR
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    networks:
      - workshop

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      SERVER_SERVLET_CONTEXTPATH: "/"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SCHEMAREGISTRY_CONNECT: "http://schema-registry:8081"
      CMD_ARGS: "--message.format=AVRO"
    depends_on:
      - kafka
      - schema-registry
    networks:
      - workshop

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.2
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx2g
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    networks:
      - workshop

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.2
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - workshop

  db:
    build: ./db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=audiobooks
    networks:
      - workshop

  kafka-connect:
    build: ./kafka-connect
    ports:
      - "8085:8085"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_PORT: 8085
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      KAFKA_HEAP_OPTS: "-Xms512m -Xmx1g"
    depends_on:
      - schema-registry
      - elasticsearch
    networks:
      - workshop

  audiobooks-search:
    build: ./audiobooks-search
    ports:
      - "3001:3001"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      BOOKS_INDEX: books-v1
      TOGGLE_GENRES_FILTER: off
    depends_on:
      - elasticsearch
    networks:
      - workshop

  kafka-streams-app:
    build: ./kafka-streams-app
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_CLOUD_FUNCTION_DEFINITION: transformBook;transformAuthor
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on:
      - kafka
      - schema-registry
    networks:
      - workshop

volumes:
  zookeeper:
  kafka:
  elasticsearch:
  postgres:

networks:
  workshop:
